apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-nodejs-repository
  title: Criar um Repositório Node.js
  description: Modelo para criar um novo repositório Node.js com as melhores práticas e configurações recomendadas
  tags:
    - recomendado
    - nodejs
spec:
  owner: user:guest
  type: serviço

  parameters:
    - title: Informações do Projeto
      required:
        - name
        - offer
      properties:
        name:
          title: Nome do Projeto
          type: string
          description: Selecione o nome do projeto.
          ui:autofocus: true
          ui:options:
            rows: 5
        offer:
          title: Oferta de Arquitetura
          description: Selecione qual oferta de arquitetura deseja utilizar.
          type: string
          enum:
            - NodeJS
          ui:widget: select

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DATABASE_NAME
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DATABASE_NAME: name
          POSTGRES_HOST: localhost
          PORT: 5000

    - id: publish-azure
      name: Publish to Azure DevOps
      action: publish:azure
      input:
        allowedHosts: ["dev.azure.com"]
        description: This is ${{ parameters.name }}
        repoUrl: "dev.azure.com?repo=${{ parameters.name }}&organization=luishenrique92250483&project=backstage"
        project: backstage
        organization: luishenrique92250483

    - id: create-branch
      name: Create Branch
      action: azure:create-branch
      input:
        repository: ${{ parameters.name }}
        organization: luishenrique92250483
        project: backstage
        branchNames: ["develop", "qa", "uat"]

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish-azure'].output.remoteUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps['publish-azure'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
